// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum MessageType {
  SMS
  EMAIL
}

model User {
  id                 Int        @id @default(autoincrement())
  username           String     @unique
  password           String
  webhookKey         String     @unique @map("webhook_key")
  createdAt          BigInt
  isAdmin            Boolean    @default(false)
  canManageTemplates Boolean    @default(false)
  expiryDate         String?    @default("20991231") @map("expiry_date")
  messages           Message[]
  cardLinks          CardLink[]
  templates          Template[]

  @@map("users")
}

model Message {
  id                    Int         @id @default(autoincrement())
  username              String
  smsContent            String
  // 短信在手机上接收的时间（原始接收时间）
  smsReceivedAt         BigInt      @map("sms_received_at")
  // 短信转发到当前系统的时间（系统接收时间）
  systemReceivedAt      BigInt      @map("system_received_at")
  // 消息来源类型（SMS、EMAIL等）
  sourceType            MessageType @map("source_type")
  // 短信发件人号码
  senderPhone           String?     @map("sender_phone")
  // 短信接收手机卡标识（如：卡1、卡2、主卡等）
  receiverCard          String?     @map("receiver_card")
  // 短信来源应用标识（如：微信、支付宝等）
  sourceApp             String?     @map("source_app")
  // 短信原始数据（JSON格式，存储完整的原始信息）
  rawData               String?     @map("raw_data")
  // 创建时间
  createdAt             BigInt      @map("created_at")
  user                  User        @relation(fields: [username], references: [username])

  @@map("messages")
}

model Template {
  id          String     @id
  name        String
  description String?
  createdAt   String
  updatedAt   String
  isPublic    Boolean    @default(false)
  username    String?
  rules       Rule[]
  cardLinks   CardLink[]
  user        User?      @relation(fields: [username], references: [username])

  @@index([username])
}

model Rule {
  id          String   @id
  templateId  String   @map("template_id")
  type        String
  mode        String
  pattern     String
  description String?
  orderNum    Int      @map("order_num")
  isActive    Boolean  @default(true) @map("is_active")
  template    Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
}

model CardLink {
  id          String    @id
  cardKey     String    @unique @map("card_key")
  username    String
  appName     String    @map("app_name")
  phone       String?   @map("phone")
  createdAt   BigInt    @map("created_at")
  firstUsedAt BigInt?   @map("first_used_at")
  url         String
  templateId  String?   @map("template_id")
  user        User      @relation(fields: [username], references: [username])
  template    Template? @relation(fields: [templateId], references: [id])

  @@map("cardLinks")
}
